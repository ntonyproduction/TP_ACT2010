# graphiques des ACF
acf(diff(log(ndi)), ylab='ACF')
acf(diff(cti), ylab='ACF')
# graphiques des PACF
pacf(diff(naadc^-1), ylab='PACF')
pacf(diff(npa^-1), ylab='PACF')
# graphiques des PACF
pacf(diff(log(ndi)), ylab='PACF')
pacf(diff(cti), ylab='PACF')
# graphiques des EACF
eacf(diff(naadc^-1), ar.max=5,ma.max=10)
eacf(diff(npa^-1), ar.max=5,ma.max=10)
# graphiques des EACF
plot(eacf(diff(naadc^-1), ar.max=5,ma.max=10))
# graphiques des EACF
eacf(diff(naadc^-1), ar.max=5,ma.max=10)
# assignation de l'arima pour chaque modele
naadc000 <- arima(diff(naadc^-1), order = c(0,0,0), method = "ML")
naadc000
naadc100
library('TSA')
library('tseries')
library('forecast')
library('plotrix')
# Importation des données
#taux <- read.csv2("C:/Users/angag426/Documents/GitHub/TP_ACT2010//Taux_de_change_US_Euro.csv")
taux <- read.csv2("C:/Users/Anthony/Documents/GitHub/TP_ACT2010/Taux_de_change_US_Euro.csv")
#taux <- read.csv2("C:/Users/TEMP/Documents/GitHub/TP_ACT2010/Taux_de_change_US_Euro.csv")
rendement<-taux$US.Euro
anne.mois<-taux$Année.mois
# création de la série chronologique
ttaux<-ts(rendement,start=c(1999,1),end=c(2016,12),frequency = 12)
# graphique de la série
plot(ttaux,ylab='USD/Euro', xlab="Année", type="o", cex=0.5)
abline(h=1)
acf(ttaux, main='')
#test augmente de Dickey-Fuller
#ar(ttaux)
ttaux.adf <- adf.test(ttaux, k=ar(ttaux)$order)
BoxCox.ar(ttaux)
plot(log(ttaux), type='o',xlab="Année", ylab='Valeur du logarithme', cex=0.5)
abline(h=0)
#ar(diff(log(ttaux)))
ttaux.log.adf <- adf.test(diff(log(ttaux)), k=ar(diff(log(ttaux)))$order)
plot(diff(log(ttaux)), type='o',xlab="Année", ylab='différenciation du logarithme', cex=0.5)
abline(h=0)
acf(diff(log(ttaux)), main='')
pacf(diff(log(ttaux)), main='', ylab='PACF')
eacf(diff(log(ttaux)))
plot(armasubsets(y=diff(log(ttaux)), nar=10, nma=1, y.name='test',ar.method='ols'))
#IMA(1,1)
ttaux011 <- arima(log(ttaux), order=c(0,1,1), method='ML')
#ARI(1,1)
ttaux110 <- arima(log(ttaux), order=c(1,1,0), method='ML')
#ARIMA(1,1,1)
ttaux111 <- arima(log(ttaux), order=c(1,1,1), method='ML')
#moyenne
ttaux.log.mu <- mean(diff(log(ttaux)))
#test des residus (shapiro-wilk)
ttaux011.sw <- shapiro.test(rstandard(ttaux011))
ttaux110.sw <- shapiro.test(rstandard(ttaux110))
ttaux111.sw <- shapiro.test(rstandard(ttaux111))
#test de dependance des residus (run.test)
ttaux011.rt <- runs(residuals(ttaux011))$pvalue
ttaux110.rt <- runs(residuals(ttaux110))$pvalue
ttaux111.rt <- runs(residuals(ttaux111))$pvalue
#test de Ljung-Box
ttaux011.lb <- Box.test(residuals(ttaux011), lag= 10, type='Ljung-Box', fitdf=1)
ttaux011.lb <- Box.test(residuals(ttaux110), lag= 10, type='Ljung-Box', fitdf=1)
ttaux111.lb <- Box.test(residuals(ttaux111), lag= 10, type='Ljung-Box', fitdf=1)
#overfiting
ttaux012<-arima(log(ttaux), order=c(0,1,2), method='ML')
plot(rstandard(ttaux011), ylab='résidus standardisés', type='l', col='green')
lines(rstandard(ttaux110), col='red')
lines(rstandard(ttaux111), col='blue')
abline(h=0)
hist(rstandard(ttaux011), xlab='',ylab='fréquence', main='IMA(1,1)')
hist(rstandard(ttaux110), xlab='résidus standardisés',ylab='', main='ARI(1,1)')
hist(rstandard(ttaux111), xlab='',ylab='', main='ARIMA(1,1,1)')
qqnorm(rstandard(ttaux011), main='IMA(1,1)',ylab='Quantiles observés',xlab='',cex=0.2)
qqnorm(rstandard(ttaux110),main='ARI(1,1)',xlab='Quantiles théoriques', ylab='',cex=0.2)
qqnorm(rstandard(ttaux111),main='ARIMA(1,1,1)',xlab='', ylab='',cex=0.2)
tsdiag(ttaux011, gof=15, omit.inital=F)
tsdiag(ttaux110, gof=15, omit.inital=F)
tsdiag(ttaux111, gof=15, omit.inital=F)
ttaux011.pred<-predict(ttaux011, n.ahead=10)
ttaux011.inf<-ttaux011.pred$pred-qnorm(0.975)*ttaux011.pred$se
ttaux011.sup<-ttaux011.pred$pred+qnorm(0.975)*ttaux011.pred$se
#modele final
ttt.pred<-round(exp(ttaux011.pred$pred+0.5*ttaux011.pred$se^2),4)
ttt.inf<-round(exp(ttaux011.inf), 4)
ttt.sup<-round(exp(ttaux011.sup), 4)
err<-rendement[217:226] - ttt.pred
plot(ttaux011, n.ahead=12, ylab='Valeur du logarithme', xlab='Années', cex=0.5)
abline(h=0)
plotCI(ttt.pred, ylab='Taux de change US/Euro', xlab='Mois', ylim=c(0.8, 1.3), li=ttt.inf, ui=ttt.sup)
lines(rendement[217:226], type='o', col='Red')
legend(x=0.8,y=0.92,legend=c("Prédictions","Observations"),
lty=c(1,1),lwd=c(2,2),col=c("black","red"))
a <- ts(rendement,start=c(1999,1),end=c(2017,10),frequency = 12)[217:226] #valeurs des 10 derniers mois notre série
# Importation des données
#saaq <- read.csv2("C:/Users/angag426/Documents/GitHub/TP_ACT2010/SAAQ-2015.csv")
saaq <- read.csv2("C:/Users/Anthony/Documents/GitHub/TP_ACT2010/SAAQ-2015.csv")
naadc<-ts(saaq$NAADC,start=c(saaq$Année[1],1),end=c(saaq$Année[length(saaq$Année)],1), frequency=1)
npa<-ts(saaq$NPA,start=saaq$Année[1],end=saaq$Année[length(saaq$Année)])
ndi<-ts(saaq$NDI,start=saaq$Année[1],end=saaq$Année[length(saaq$Année)])
cti<-ts(saaq$CTI,start=saaq$Année[1],end=saaq$Année[length(saaq$Année)])
naadc[tsoutliers(naadc)$index]<-tsoutliers(naadc)$replacements
npa[tsoutliers(npa)$index]<-tsoutliers(npa)$replacements
ndi[tsoutliers(ndi)$index]<-tsoutliers(ndi)$replacements
cti[tsoutliers(cti)$index]<-tsoutliers(cti)$replacements
# graphiques de la série
plot(naadc,ylab="Fréquence", xlab="Année", main="Nbre d'accidents avec dommages corporels (auto)", type="o", cex=0.5, col="red")
plot(npa,ylab="Fréquence", xlab="Année", main="Nbre de personnes accidentées", type="o", cex=0.5, col="blue")
# graphiques de la série
plot(ndi,ylab="Fréquence", xlab="Année", main="Nbre de demandes d'indemnités", type="o", cex=0.5, col="green")
plot(cti,ylab="Coût", xlab="Année", main="Coût total de l'indemnisation", type="o", cex=0.5)
#test augmente de Dickey-Fuller
naadc.adf <- adf.test(naadc, k=ar(naadc)$order)
npa.adf <- adf.test(npa, k=ar(npa)$order)
ndi.adf <- adf.test(ndi, k=ar(ndi)$order)
cti.adf <- adf.test(cti, k=ar(cti)$order)
# graphiques de box cox
boxcoxv_naadc <- BoxCox.ar(naadc, lambda=seq(-3,1,0.01), main="Box-Cox NAADC")$mle
boxcoxic_naadc <- BoxCox.ar(naadc,lambda=seq(-3,1,0.01), main="Box-Cox NAADC")$ci
boxcoxv_npa <- BoxCox.ar(npa, lambda=seq(-3,1,0.01), main="Box-Cox NPA")$mle
boxcoxic_npa <- BoxCox.ar(npa,lambda=seq(-3,1,0.01), main="Box-Cox NPA")$ci
# graphiques de box cox
boxcoxv_ndi <- BoxCox.ar(ndi, lambda=seq(-2,1.5,0.01), main="Box-Cox NDI")$mle
boxcoxic_ndi <- BoxCox.ar(ndi,lambda=seq(-2,1.5,0.01), main="Box-Cox NDI")$ci
boxcoxv_cti <- BoxCox.ar(cti, lambda=seq(-0.5,2.5,0.01), main="Box-Cox CTI")$mle
boxcoxic_cti <- BoxCox.ar(cti,lambda=seq(-0.5,2.5,0.01), main="Box-Cox CTI")$ci
# graphiques des nouvelles séries
plot(diff(naadc^-1), xlab='Temps', ylab='', type='o')
plot(diff(npa^-1), xlab='Temps', ylab='', type='o')
# graphiques des nouvelles séries
plot(diff(log(ndi)), xlab='Temps', ylab='', type='o')
plot(diff(cti), xlab='Temps', ylab='', type='o')
# graphiques des ACF
acf(diff(naadc^-1), ylab='ACF')
acf(diff(npa^-1), ylab='ACF')
# graphiques des ACF
acf(diff(log(ndi)), ylab='ACF')
acf(diff(cti), ylab='ACF')
# graphiques des PACF
pacf(diff(naadc^-1), ylab='PACF')
pacf(diff(npa^-1), ylab='PACF')
# graphiques des PACF
pacf(diff(log(ndi)), ylab='PACF')
pacf(diff(cti), ylab='PACF')
# graphiques des BIC
plot(armasubsets(y=diff(naadc^-1), nar=3, nma=3, y.name = "test", ar.method = "ols"))
plot(armasubsets(y=diff(npa^-1), nar=3, nma=3, y.name = "test", ar.method = "ols"))
# graphiques des BIC
plot(armasubsets(y=diff(log(ndi)), nar=3, nma=3, y.name = "test", ar.method = "ols"))
plot(armasubsets(y=diff(cti), nar=3, nma=3, y.name = "test", ar.method = "ols"))
naadc100
naadc100 <- arima(diff(naadc^-1), order = c(1,0,0), method = "ML")
# assignation de l'arima pour chaque modele
naadc000 <- arima(diff(naadc^-1), order = c(0,0,0), method = "ML")
naadc100 <- arima(diff(naadc^-1), order = c(1,0,0), method = "ML")
npa000 <- arima(diff(npa^-1), order = c(0,0,0), method = "ML")
ndi000 <- arima(diff(log(ndi)), order = c(0,0,0), method = "ML")
ndi001 <- arima(diff(log(ndi)), order = c(0,0,1), method = "ML")
ndi100 <- arima(diff(log(ndi)), order = c(1,0,0), method = "ML")
cti000 <- arima(diff(cti), order = c(0,0,0), method = "ML")
naadc100
ndi001
round(ndi001$coef[1],4)
round(mean(diff(log(ndi))),9)
round(ndi100$aic,0)
round(ndi100$loglik,1)
cti003 <- arima(diff(cti), order = c(0,0,3), fixed = c(0, 0, NA), method = "ML")
cti003 <- arima(diff(cti), order = c(0,0,3), method = "ML")
cti003
cti003 <- arima(diff(cti), order = c(0,0,3), fixed = c(NA, 0, 0, NA), method = "ML")
cti003
cti003 <- arima(diff(cti), order = c(0,0,3), fixed = c(0, 0, NA, NA), method = "ML")
cti003
npa003
cti003
cti003$coef
cti003$coef[3]
cti000
ndi000
ndi001
npa000
npa001
npa001 <- arima(diff(npa^-1), order = c(0,0,1), method = "ML")
npa001
naadc000
naadc100
ndi001
ndi100
plot(armasubsets(y=diff(cti), nar=3, nma=1, y.name = "test", ar.method = "ols"))
# histogrammes
hist(rstandard(naadc000), xlab='résidus standardisés',ylab='fréquence', main='ARMA(0,0)')
hist(rstandard(naadc100), xlab='résidus standardisés',ylab='fréquence', main='ARMA(1,0)')
qqnorm(rstandard(naadc000), main='ARMA(0,0)',ylab='Quantiles observés',xlab='Quantiles théoriques',cex=0.2)
qqnorm(rstandard(naadc100),main='ARMA(1,0)',xlab='Quantiles théoriques', ylab='Quantiles observés',cex=0.2)
round(naadc000.sw$p.value,4)
naadc000.sw <- shapiro.test(rstandard(naadc000))
naadc100.sw <- shapiro.test(rstandard(naadc100))
naadc000.rt <- runs(residuals(naadc000))$pvalue
naadc100.rt <- runs(residuals(naadc100))$pvalue
naadc000.lb <- Box.test(residuals(naadc000), lag = 10, type = "Ljung-Box", fitdf = 1)
naadc100.lb <- Box.test(residuals(naadc100), lag = 10, type = "Ljung-Box", fitdf = 1)
round(naadc000.sw$p.value,4)
round(naadc000.rt,4)
round(naadc100.rt,4)
naadc001 <- arima(diff(naadc^-1), order = c(0,0,1), method = "ML")
naadc001
naadc000
naadc001
naadc100
library('TSA')
library('tseries')
library('forecast')
library('plotrix')
# Importation des données
#taux <- read.csv2("C:/Users/angag426/Documents/GitHub/TP_ACT2010//Taux_de_change_US_Euro.csv")
taux <- read.csv2("C:/Users/Anthony/Documents/GitHub/TP_ACT2010/Taux_de_change_US_Euro.csv")
#taux <- read.csv2("C:/Users/TEMP/Documents/GitHub/TP_ACT2010/Taux_de_change_US_Euro.csv")
rendement<-taux$US.Euro
anne.mois<-taux$Année.mois
# création de la série chronologique
ttaux<-ts(rendement,start=c(1999,1),end=c(2016,12),frequency = 12)
# graphique de la série
plot(ttaux,ylab='USD/Euro', xlab="Année", type="o", cex=0.5)
abline(h=1)
acf(ttaux, main='')
#test augmente de Dickey-Fuller
#ar(ttaux)
ttaux.adf <- adf.test(ttaux, k=ar(ttaux)$order)
BoxCox.ar(ttaux)
plot(log(ttaux), type='o',xlab="Année", ylab='Valeur du logarithme', cex=0.5)
abline(h=0)
#ar(diff(log(ttaux)))
ttaux.log.adf <- adf.test(diff(log(ttaux)), k=ar(diff(log(ttaux)))$order)
plot(diff(log(ttaux)), type='o',xlab="Année", ylab='différenciation du logarithme', cex=0.5)
abline(h=0)
acf(diff(log(ttaux)), main='')
pacf(diff(log(ttaux)), main='', ylab='PACF')
eacf(diff(log(ttaux)))
plot(armasubsets(y=diff(log(ttaux)), nar=10, nma=1, y.name='test',ar.method='ols'))
#IMA(1,1)
ttaux011 <- arima(log(ttaux), order=c(0,1,1), method='ML')
#ARI(1,1)
ttaux110 <- arima(log(ttaux), order=c(1,1,0), method='ML')
#ARIMA(1,1,1)
ttaux111 <- arima(log(ttaux), order=c(1,1,1), method='ML')
#moyenne
ttaux.log.mu <- mean(diff(log(ttaux)))
#test des residus (shapiro-wilk)
ttaux011.sw <- shapiro.test(rstandard(ttaux011))
ttaux110.sw <- shapiro.test(rstandard(ttaux110))
ttaux111.sw <- shapiro.test(rstandard(ttaux111))
#test de dependance des residus (run.test)
ttaux011.rt <- runs(residuals(ttaux011))$pvalue
ttaux110.rt <- runs(residuals(ttaux110))$pvalue
ttaux111.rt <- runs(residuals(ttaux111))$pvalue
#test de Ljung-Box
ttaux011.lb <- Box.test(residuals(ttaux011), lag= 10, type='Ljung-Box', fitdf=1)
ttaux011.lb <- Box.test(residuals(ttaux110), lag= 10, type='Ljung-Box', fitdf=1)
ttaux111.lb <- Box.test(residuals(ttaux111), lag= 10, type='Ljung-Box', fitdf=1)
#overfiting
ttaux012<-arima(log(ttaux), order=c(0,1,2), method='ML')
plot(rstandard(ttaux011), ylab='résidus standardisés', type='l', col='green')
lines(rstandard(ttaux110), col='red')
lines(rstandard(ttaux111), col='blue')
abline(h=0)
hist(rstandard(ttaux011), xlab='',ylab='fréquence', main='IMA(1,1)')
hist(rstandard(ttaux110), xlab='résidus standardisés',ylab='', main='ARI(1,1)')
hist(rstandard(ttaux111), xlab='',ylab='', main='ARIMA(1,1,1)')
qqnorm(rstandard(ttaux011), main='IMA(1,1)',ylab='Quantiles observés',xlab='',cex=0.2)
qqnorm(rstandard(ttaux110),main='ARI(1,1)',xlab='Quantiles théoriques', ylab='',cex=0.2)
qqnorm(rstandard(ttaux111),main='ARIMA(1,1,1)',xlab='', ylab='',cex=0.2)
tsdiag(ttaux011, gof=15, omit.inital=F)
tsdiag(ttaux110, gof=15, omit.inital=F)
tsdiag(ttaux111, gof=15, omit.inital=F)
ttaux011.pred<-predict(ttaux011, n.ahead=10)
ttaux011.inf<-ttaux011.pred$pred-qnorm(0.975)*ttaux011.pred$se
ttaux011.sup<-ttaux011.pred$pred+qnorm(0.975)*ttaux011.pred$se
#modele final
ttt.pred<-round(exp(ttaux011.pred$pred+0.5*ttaux011.pred$se^2),4)
ttt.inf<-round(exp(ttaux011.inf), 4)
ttt.sup<-round(exp(ttaux011.sup), 4)
err<-rendement[217:226] - ttt.pred
plot(ttaux011, n.ahead=12, ylab='Valeur du logarithme', xlab='Années', cex=0.5)
abline(h=0)
plotCI(ttt.pred, ylab='Taux de change US/Euro', xlab='Mois', ylim=c(0.8, 1.3), li=ttt.inf, ui=ttt.sup)
lines(rendement[217:226], type='o', col='Red')
legend(x=0.8,y=0.92,legend=c("Prédictions","Observations"),
lty=c(1,1),lwd=c(2,2),col=c("black","red"))
a <- ts(rendement,start=c(1999,1),end=c(2017,10),frequency = 12)[217:226] #valeurs des 10 derniers mois notre série
# Importation des données
#saaq <- read.csv2("C:/Users/angag426/Documents/GitHub/TP_ACT2010/SAAQ-2015.csv")
saaq <- read.csv2("C:/Users/Anthony/Documents/GitHub/TP_ACT2010/SAAQ-2015.csv")
naadc<-ts(saaq$NAADC,start=c(saaq$Année[1],1),end=c(saaq$Année[length(saaq$Année)],1), frequency=1)
npa<-ts(saaq$NPA,start=saaq$Année[1],end=saaq$Année[length(saaq$Année)])
ndi<-ts(saaq$NDI,start=saaq$Année[1],end=saaq$Année[length(saaq$Année)])
cti<-ts(saaq$CTI,start=saaq$Année[1],end=saaq$Année[length(saaq$Année)])
naadc[tsoutliers(naadc)$index]<-tsoutliers(naadc)$replacements
npa[tsoutliers(npa)$index]<-tsoutliers(npa)$replacements
ndi[tsoutliers(ndi)$index]<-tsoutliers(ndi)$replacements
cti[tsoutliers(cti)$index]<-tsoutliers(cti)$replacements
# graphiques de la série
plot(naadc,ylab="Fréquence", xlab="Année", main="Nbre d'accidents avec dommages corporels (auto)", type="o", cex=0.5, col="red")
plot(npa,ylab="Fréquence", xlab="Année", main="Nbre de personnes accidentées", type="o", cex=0.5, col="blue")
# graphiques de la série
plot(ndi,ylab="Fréquence", xlab="Année", main="Nbre de demandes d'indemnités", type="o", cex=0.5, col="green")
plot(cti,ylab="Coût", xlab="Année", main="Coût total de l'indemnisation", type="o", cex=0.5)
#test augmente de Dickey-Fuller
naadc.adf <- adf.test(naadc, k=ar(naadc)$order)
npa.adf <- adf.test(npa, k=ar(npa)$order)
ndi.adf <- adf.test(ndi, k=ar(ndi)$order)
cti.adf <- adf.test(cti, k=ar(cti)$order)
# graphiques de box cox
boxcoxv_naadc <- BoxCox.ar(naadc, lambda=seq(-3,1,0.01), main="Box-Cox NAADC")$mle
boxcoxic_naadc <- BoxCox.ar(naadc,lambda=seq(-3,1,0.01), main="Box-Cox NAADC")$ci
boxcoxv_npa <- BoxCox.ar(npa, lambda=seq(-3,1,0.01), main="Box-Cox NPA")$mle
boxcoxic_npa <- BoxCox.ar(npa,lambda=seq(-3,1,0.01), main="Box-Cox NPA")$ci
# graphiques de box cox
boxcoxv_ndi <- BoxCox.ar(ndi, lambda=seq(-2,1.5,0.01), main="Box-Cox NDI")$mle
boxcoxic_ndi <- BoxCox.ar(ndi,lambda=seq(-2,1.5,0.01), main="Box-Cox NDI")$ci
boxcoxv_cti <- BoxCox.ar(cti, lambda=seq(-0.5,2.5,0.01), main="Box-Cox CTI")$mle
boxcoxic_cti <- BoxCox.ar(cti,lambda=seq(-0.5,2.5,0.01), main="Box-Cox CTI")$ci
# graphiques des nouvelles séries
plot(diff(naadc^-1), xlab='Temps', ylab='', type='o')
plot(diff(npa^-1), xlab='Temps', ylab='', type='o')
# graphiques des nouvelles séries
plot(diff(log(ndi)), xlab='Temps', ylab='', type='o')
plot(diff(cti), xlab='Temps', ylab='', type='o')
# graphiques des ACF
acf(diff(naadc^-1), ylab='ACF')
acf(diff(npa^-1), ylab='ACF')
# graphiques des ACF
acf(diff(log(ndi)), ylab='ACF')
acf(diff(cti), ylab='ACF')
# graphiques des PACF
pacf(diff(naadc^-1), ylab='PACF')
pacf(diff(npa^-1), ylab='PACF')
# graphiques des PACF
pacf(diff(log(ndi)), ylab='PACF')
pacf(diff(cti), ylab='PACF')
# graphiques des BIC
plot(armasubsets(y=diff(naadc^-1), nar=3, nma=3, y.name = "test", ar.method = "ols"))
plot(armasubsets(y=diff(npa^-1), nar=3, nma=3, y.name = "test", ar.method = "ols"))
# graphiques des BIC
plot(armasubsets(y=diff(log(ndi)), nar=3, nma=3, y.name = "test", ar.method = "ols"))
plot(armasubsets(y=diff(cti), nar=3, nma=1, y.name = "test", ar.method = "ols"))
# assignation de l'arima pour chaque modele
naadc000 <- arima(diff(naadc^-1), order = c(0,0,0), method = "ML")
naadc100 <- arima(diff(naadc^-1), order = c(1,0,0), method = "ML")
npa000 <- arima(diff(npa^-1), order = c(0,0,0), method = "ML")
npa001 <- arima(diff(npa^-1), order = c(0,0,1), method = "ML")
ndi000 <- arima(diff(log(ndi)), order = c(0,0,0), method = "ML")
ndi001 <- arima(diff(log(ndi)), order = c(0,0,1), method = "ML")
ndi100 <- arima(diff(log(ndi)), order = c(1,0,0), method = "ML")
cti000 <- arima(diff(cti), order = c(0,0,0), method = "ML")
cti003 <- arima(diff(cti), order = c(0,0,3), fixed = c(0, 0, NA, NA), method = "ML")
naadc000.sw <- shapiro.test(rstandard(naadc000))
naadc100.sw <- shapiro.test(rstandard(naadc100))
naadc000.rt <- runs(residuals(naadc000))$pvalue
naadc100.rt <- runs(residuals(naadc100))$pvalue
naadc000.lb <- Box.test(residuals(naadc000), lag = 10, type = "Ljung-Box", fitdf = 1)
naadc100.lb <- Box.test(residuals(naadc100), lag = 10, type = "Ljung-Box", fitdf = 1)
# graphiques résidus standardisés
plot(rstandard(naadc000), ylab = "résidus standardisés", type = "l", col = "blue")
lines(rstandard(naadc100), col = "red")
# histogrammes
hist(rstandard(naadc000), xlab='résidus standardisés',ylab='fréquence', main='ARMA(0,0)')
hist(rstandard(naadc100), xlab='résidus standardisés',ylab='fréquence', main='ARMA(1,0)')
qqnorm(rstandard(naadc000), main='ARMA(0,0)',ylab='Quantiles observés',xlab='Quantiles théoriques',cex=0.2)
qqnorm(rstandard(naadc100),main='ARMA(1,0)',xlab='Quantiles théoriques', ylab='Quantiles observés',cex=0.2)
naadc001 <- arima(diff(naadc^-1), order = c(0,0,1), method = "ML")
naadc000
naadc001
naadc100
naadc001
naadc000
naadc001
naadc001$coef[1]
naadc000
naadc000$se
naadc000.pred$se
naadc000.pred <- predict(naadc000, n.ahead = 5)
naadc000.pred$se
naadc000.pred
naadc000.pred$se
naadc000.pred <- predict(naadc000, n.ahead = 5)
naadc000.inf <- naadc000.pred$pred - qnorm(1-0.025)*naadc000.pred$se
naadc000.sup <- naadc000.pred$pred + qnorm(1-0.025)*naadc000.pred$se
# Modèle final
naadc000.pred.reel <- naadc000.pred^-1
naadc000.inf.reel <- naadc000.inf^-1
# Modèle final
naadc000.pred.reel <- naadc000.pred^-1
naadc000.pred
naadc000.pred$pred
# Modèle final
naadc000.pred.reel <- naadc000.pred$pred^-1
naadc000.inf.reel <- naadc000.inf^-1
naadc000.sup.reel <- naadc000.sup^-1
naadc000.pred.reel
plotCI(naadc000.pred.reel, ylab = "fréquence", xlab = "année")
plotCI(naadc000.pred.reel, ylab = "fréquence", xlab = "année", li=naadc000.inf.reel, ui=naadc000.sup.reel)
naadc000.pred.reel
naadc000.pred$pred
naadc000.pred.reel[1]
naadc000.pred.reel[4]
naadc001$coef[2]
`r naadc001$coef[1]`
naadc001$coef[1]
naadc000.inf.reel
naadc000.sup.reel
naadc000.pred.reel
plotCI(naadc000.pred.reel, ylab = "fréquence", xlab = "année", li=naadc000.inf.reel, ui=naadc000.sup.reel,, cex=0.5)
plotCI(naadc000.pred.reel, ylab = "fréquence", xlab = "année", li=naadc000.inf.reel, ui=naadc000.sup.reel, cex=0.5)
naadc000.sup.reel
plotCI(naadc000.pred.reel, ylab = "fréquence", xlab = "année", ylim=c(0, 380000), li=naadc000.inf.reel, ui=naadc000.sup.reel, cex=0.5)
plotCI(naadc000.pred.reel, ylab = "fréquence", xlab = "année", ylim=c(0, 400000), li=naadc000.inf.reel, ui=naadc000.sup.reel, cex=0.5)
ttt.pred
naadc000.pred.reel
plot(naadc000.pred.reel, n.ahead=5, ylab='Fréquence', xlab='Années', cex=0.5)
plot(naadc000, n.ahead=12, ylab='Valeur du logarithme', xlab='Années', cex=0.5)
cti000.sw <- shapiro.test(rstandard(cti000))
cti003.sw <- shapiro.test(rstandard(cti003))
cti000.rt <- runs(residuals(cti000))$pvalue
cti003.rt <- runs(residuals(cti003))$pvalue
cti000.lb <- Box.test(residuals(cti000), lag = 10, type = "Ljung-Box", fitdf = 1)
cti003.lb <- Box.test(residuals(cti003), lag = 10, type = "Ljung-Box", fitdf = 1)
# graphiques résidus standardisés
plot(rstandard(cti000), ylab = "résidus standardisés", type = "l", col = "blue")
lines(rstandard(cti003), col = "red")
# graphiques résidus standardisés
plot(rstandard(cti000), ylab = "résidus standardisés", type = "l", col = "blue")
# histogrammes
hist(rstandard(cti000), xlab='résidus standardisés',ylab='fréquence', main='ARMA(0,0)')
hist(rstandard(cti003), xlab='résidus standardisés',ylab='fréquence', main='ARMA(1,0)')
qqnorm(rstandard(cti000), main='ARMA(0,0)',ylab='Quantiles observés',xlab='Quantiles théoriques',cex=0.2)
qqnorm(rstandard(cti003),main='ARMA(1,0)',xlab='Quantiles théoriques', ylab='Quantiles observés',cex=0.2)
cti000.sw <- shapiro.test(rstandard(cti000))
cti003.sw <- shapiro.test(rstandard(cti003))
cti000.rt <- runs(residuals(cti000))$pvalue
cti003.rt <- runs(residuals(cti003))$pvalue
cti000.lb <- Box.test(residuals(cti000), lag = 10, type = "Ljung-Box", fitdf = 1)
cti003.lb <- Box.test(residuals(cti003), lag = 10, type = "Ljung-Box", fitdf = 1)
round(cti000.sw$p.value,4)
round(cti003.sw$p.value,4)
round(cti000.rt,4)
round(cti003.rt,4)
cti001 <- arima(diff(cti), order = c(0,0,1), method = "ML")
cti100 <- arima(diff(cti), order = c(0,0,1), method = "ML")
cti001 <- arima(diff(cti), order = c(0,0,1), method = "ML")
round(cti000.sw$p.value,4)
round(cti003.sw$p.value,4)
cti001 <- arima(diff(cti), order = c(0,0,1), method = "ML")
cti100.sw <- shapiro.test(rstandard(cti100))
cti001.sw <- shapiro.test(rstandard(cti001))
round(cti100.sw$p.value,4)
round(cti001.sw$p.value,4)
cti100.sw <- shapiro.test(rstandard(cti100))
cti001.sw <- shapiro.test(rstandard(cti001))
cti001 <- arima(diff(cti), order = c(0,0,1), method = "ML")
cti100 <- arima(diff(cti), order = c(1,0,0), method = "ML")
cti100.sw <- shapiro.test(rstandard(cti100))
cti001.sw <- shapiro.test(rstandard(cti001))
round(cti100.sw$p.value,4)
round(cti001.sw$p.value,4)
# Prédictions avec bornes
cti000.pred <- predict(cti000, n.ahead = 5)
cti000.pred
cti000
cti
cti
# Prédictions avec bornes
cti000 <- arima(cti, order = c(0,1,0), method = "ML")
# Prédictions avec bornes
naadc000.pred <- arima(naadc^-1, order = c(0,1,0), method = "ML")
naadc000.pred <- predict(naadc000, n.ahead = 5)
naadc000.inf <- naadc000.pred$pred - qnorm(1-0.025)*naadc000.pred$se
# Modèle final
naadc000.pred.reel <- naadc000.pred$pred^-1
naadc000.inf.reel <- naadc000.inf^-1
naadc000.sup.reel <- naadc000.sup^-1
plot(naadc000^-1, n.ahead=5, ylab='Fréquence', xlab='Années', cex=0.5)
naadc000
# Prédictions avec bornes
naadc000 <- arima(naadc^-1, order = c(0,1,0), method = "ML")
naadc000.pred <- predict(naadc000, n.ahead = 5)
naadc000.inf <- naadc000.pred$pred - qnorm(1-0.025)*naadc000.pred$se
naadc000.sup <- naadc000.pred$pred + qnorm(1-0.025)*naadc000.pred$se
# Modèle final
naadc000.pred.reel <- naadc000.pred$pred^-1
naadc000.inf.reel <- naadc000.inf^-1
naadc000.sup.reel <- naadc000.sup^-1
plot(naadc000, n.ahead=5, ylab='Fréquence', xlab='Années', cex=0.5)
# Modèle final
naadc000.pred.reel <- naadc000.pred$pred^-1
naadc000.pred.reel
naadc000.inf.reel <- naadc000.inf^-1
naadc000.sup.reel <- naadc000.sup^-1
naadc000.inf.reel
naadc000.sup.reel[1]
naadc000.inf.reel[1]
tsdiag(naadc000, gof=15, omit.inital=F)
naadc000.lb
naadc100.lb
tsdiag(cti000, gof=15, omit.inital=F)
round(cti000.lb$p.value, 4)
round(cti003.lb$p.value, 4)
